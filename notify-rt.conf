//example icinga2 configuration file
object NotificationCommand "notify-rt-host-command" {
    import "plugin-notification-command"

    env = {
        NOTIFICATIONTYPE = "$notification.type$"
        HOSTALIAS = "$host.display_name$"
        HOSTADDRESS = "$address$"
        HOSTSTATE = "$host.state$"
        HOSTOUTPUT = "$host.output$"
        NOTIF_AUTH_NAME = "$notification.author$"
        NOTIF_COMMENT = "$notification.comment$"
        HOSTDISPLAYNAME = "$host.display_name$"
        SERVICEDESC = "$service.name$"
        SERVICESTATE = "$service.state$"
        SERVICEOUTPUT = "$service.output$"
    }

    command = [ SysconfDir + "/icinga2/scripts/notify_rt.py", "$host.display_name$", "$host.state$", "$notification.type$"]
    arguments = {
        "--requestor" = "devops@monitoring.example.com"
    }
}

object NotificationCommand "notify-rt-service-command" {
    import "plugin-notification-command"

    env = {
        NOTIFICATIONTYPE = "$notification.type$"
        HOSTALIAS = "$host.display_name$"
        HOSTADDRESS = "$address$"
        HOSTSTATE = "$host.state$"
        HOSTOUTPUT = "$host.output$"
        NOTIF_AUTH_NAME = "$notification.author$"
        NOTIF_COMMENT = "$notification.comment$"
        HOSTDISPLAYNAME = "$host.display_name$"
        SERVICEDESC = "$service.name$"
        SERVICESTATE = "$service.state$"
        SERVICEOUTPUT = "$service.output$"
    }

    command = [ SysconfDir + "/icinga2/scripts/notify_rt.py", "$host.display_name$", "$service.state$", "$notification.type$"]
    arguments = {
        "--service" = "$service.display_name$"
        "--requestor" = "devops@monitoring.example.com"
    }
}

template Notification "notify-rt-default-configuration" {
    types = [ Problem, Acknowledgement, Recovery, Custom,
              FlappingStart, FlappingEnd,
              DowntimeStart, DowntimeEnd, DowntimeRemoved ]

    //user_groups = [ "icingaadmins" ]
    users = [ "icingaadmin" ]

    period = "24x7"

    //interval = 5m
}

template Notification "notify-rt-default-configuration-hosts" {
    import "notify-rt-default-configuration"
    command = "notify-rt-host-command"
}

template Notification "notify-rt-default-configuration-services" {
    import "notify-rt-default-configuration"
    command = "notify-rt-service-command"
}

apply Notification "notify-rt-notification-hosts" to Host {
    import "notify-rt-default-configuration-hosts"
    var what_type = "host"

    assign where host.vars.notify_rt == "enabled"
}

apply Notification "notify-rt-notification-services" to Service {
    import "notify-rt-default-configuration-services"
    var what_type = "service"

    assign where host.vars.notify_rt == "enabled"
}